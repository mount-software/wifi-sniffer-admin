import {Component, OnInit, ViewChild} from '@angular/core';
import {Router} from "@angular/router";
import {MatDialog, MatRadioChange} from "@angular/material";
import {DialogComponent} from "../../../shared/dialog/dialog.component";
import {CustomerService} from "../../../services/customer.service";
import {NgForm} from "@angular/forms";

@Component({
    selector: 'app-register',
    templateUrl: './register.component.html',
    styleUrls: ['./register.component.scss']
})
export class RegisterComponent implements OnInit {

    constructor(private customerService: CustomerService, public dialog: MatDialog, private router: Router) {
    }

    public showPasswordInput = false;

    private email;
    private plainPassword;
    private autoGeneratedPassword = true;
    private companyName;
    private companyAddress;
    private contactPersonName;
    private contactPersonPhone;
    private fiscalCode;
    private vatPay = false;
    private noTradeRegistry;

    selectedOption = 'genereaza o parola automat';
    options = [
        'genereaza o parola automat',
        'creeaza parola',
    ];

    @ViewChild('f')
    public form: NgForm;

    hideCurrentPassword = true;

    ngOnInit() {
    }

    handleChangeOptions(option: MatRadioChange) {
        if (option.value === 'creeaza parola') {
            this.showPasswordInput = true;
            this.autoGeneratedPassword = false;
            this.plainPassword = '';
        } else if (option.value === 'genereaza o parola automat') {
            this.showPasswordInput = false;
            this.plainPassword = false;
            this.autoGeneratedPassword = true;
        }
    }

    register() {
        this.customerService.register({
            email: this.email,
                contactPersonName: this.contactPersonName,
                contactPersonPhone: this.contactPersonPhone,
                companyName: this.companyName,
                companyAddress: this.companyAddress,
                fiscalCode: this.fiscalCode,
                vatPay: this.vatPay,
                noTradeRegistry: this.noTradeRegistry,
                autoGeneratedPassword: this.autoGeneratedPassword,
                plainPassword: this.plainPassword
        }).then((customer) => {
            let dialog = this.dialog.open(DialogComponent, {
                width: '250px',
                data: {
                    title: 'Succes',
                    message: 'Inregistrare reusita'
                }
            });
            dialog.afterClosed().subscribe(result => {
                this.router.navigate(['/login']);
                // this.router.navigate(['locations']);
            });
        }, err => {
            let dialogRef = this.dialog.open(DialogComponent, {
                width: '250px',
                data: {
                    title: 'Eroare',
                    message: err
                }
            });
        });

        console.log('email: ' + this.email, 'fiscal:' + this.fiscalCode, 'company:' + this.companyName, 'registry:' + this.noTradeRegistry, 'address:' + this.companyAddress, 'contactName:' + this.contactPersonName, 'contactPhone:' + this.contactPersonPhone, 'VAT:' + this.vatPay, 'autoPass:' + this.autoGeneratedPassword, 'customPass:' + this.plainPassword);
        // this.form.reset();
        // Object.keys(this.form.controls).forEach(key => {
        //     this.form.controls[key].setErrors(null);
        // });
    }
}
